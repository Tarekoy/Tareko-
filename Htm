import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# Configurations
BOT_TOKEN = "8027805011:AAHNnRgy-ir09oHN3uSsWYSLS7NyO6ZyJhU" 
ZONE_ID = "2799758" 

# Bot setup
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN, parse_mode="HTML")  # ржПржЦрж╛ржирзЗ ржнрзБрж▓ рж╕ржВрж╢рзЛржзржи ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
dp = Dispatcher(bot)

# Start command
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer(
        "ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо!\n"
        "ЁЯОп ржмрж┐ржЬрзНржЮрж╛ржкржи ржжрзЗржЦрзЗ ржЖрзЯ ржХрж░рзБржи\n"
        "ЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржЪрзЗржХ ржХрж░рзБржи: /balance\n"
        "ЁЯУ║ ржмрж┐ржЬрзНржЮрж╛ржкржи ржжрзЗржЦрзБржи: /watch_ad\n"
        "ЁЯПз ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржи ржХрж░рзБржи: /withdraw"
    )

# Watch Ad command
@dp.message_handler(commands=["watch_ad"])
async def watch_ad(message: types.Message):
    ad_url = f"https://syndication.exoclick.com/tag.php?zoneid={ZONE_ID}"
    await message.answer(
        f"ЁЯФФ **ржмрж┐ржЬрзНржЮрж╛ржкржи ржжрзЗржЦрзБржи & ржЖрзЯ ржХрж░рзБржи!**\n\n"
        f"ЁЯСЙ **[ржмрж┐ржЬрзНржЮрж╛ржкржи ржжрзЗржЦрзБржи]({ad_url})**", disable_web_page_preview=True
    )

# Balance command (ржбрзЗржорзЛ)
@dp.message_handler(commands=["balance"])
async def balance(message: types.Message):
    await message.answer("ЁЯТ░ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: 0.00 BDT (ржбрзЗржорзЛ)")

# Withdraw command (ржбрзЗржорзЛ)
@dp.message_handler(commands=["withdraw"])
async def withdraw(message: types.Message):
    await message.answer("ЁЯПз ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржирзЗрж░ ржЬржирзНржп ржорж┐ржирж┐ржорж╛ржо ржмрзНржпрж╛рж▓рзЗржирзНрж╕ рзлрзж BDT")

# Run bot
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
